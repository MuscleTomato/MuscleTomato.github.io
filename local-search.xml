<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>点集大小的思考_实变函数分析第一章节&quot;集合和点集&quot;</title>
    <link href="/2023/04/27/%E7%82%B9%E9%9B%86%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%80%9D%E8%80%83_%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%E7%AC%AC%E4%B8%80%E7%AB%A0%E8%8A%82%E9%9B%86%E5%90%88%E5%92%8C%E7%82%B9%E9%9B%86/"/>
    <url>/2023/04/27/%E7%82%B9%E9%9B%86%E5%A4%A7%E5%B0%8F%E7%9A%84%E6%80%9D%E8%80%83_%E5%AE%9E%E5%8F%98%E5%87%BD%E6%95%B0%E5%88%86%E6%9E%90%E7%AC%AC%E4%B8%80%E7%AB%A0%E8%8A%82%E9%9B%86%E5%90%88%E5%92%8C%E7%82%B9%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="点集大小的思考-实变函数分析第一章节”集合和点集”"><a href="#点集大小的思考-实变函数分析第一章节”集合和点集”" class="headerlink" title="点集大小的思考_实变函数分析第一章节”集合和点集”"></a>点集大小的思考_实变函数分析第一章节”集合和点集”</h1><blockquote><p>实变函数分析 –third edition 周民强</p></blockquote><h2 id="引"><a href="#引" class="headerlink" title="引"></a>引</h2><p>在和馨讨论一些常见的点集的大小的时候，陷入了争论。因为本身不是数学专业，很多概念很模糊，遂找来这本书阅读了第一章节。其实这本书的主要目的还是积分、测度和分析，但作为对点集和集合简单知识介绍的第一章，对解决我大部分的困惑已经是足够了</p><p>问题是这样的：</p><p><em>“一条线段和一条射线之间点集大小的比较？比如集合$[0,1]$与$( 0,+\infty )$“</em> </p><h2 id="映射与Contor定理"><a href="#映射与Contor定理" class="headerlink" title="映射与Contor定理"></a>映射与Contor定理</h2><h3 id="映射"><a href="#映射" class="headerlink" title="映射"></a>映射</h3><p><strong>定义</strong> 映射$f$对于每一个$x\in X$，均存在唯一的$y\in Y$与之对应,称这个对应关系为映射,<br>$$<br>f:X\rightarrow Y<br>$$<br>显然这样的集合对应关系被称为单射，同样如果此映射满足对应任意$y\in Y$存在$x\in X$与之对应，这样的映射被称为满射。如果既单又满则称为双射，也就是两个集合之间的一一对应关系！</p><h3 id="集合大小的比较"><a href="#集合大小的比较" class="headerlink" title="集合大小的比较"></a>集合大小的比较</h3><p>对于两个集合的比较，一个常见的思路的就是讲元素拿出来，一个对上一个然后比较，如果哪一个集合多出来，那么这个集合明显是多于另外一个集合的。对于有限集这个不是问题，拿出来简单比较就好了，而对于无穷个元素的无限集该怎么比较？正好借助映射，我们只要找到一个能够把其元素一一对应起来的映射，那么就可以说这两个集合对等即$A\sim B$.</p><p>一个证明集合之间的对等关系的重要定理-Cantor-Bernstein定理将在下面介绍</p><p><strong>引理-集合在映射下的分解</strong> 若$f:X\rightarrow Y$,$g:Y\rightarrow X$,有分解<br>$$<br>X&#x3D;A\bigcup A^{\sim},Y&#x3D;B\bigcup B^{\sim}<br>$$<br>其中$f(A)&#x3D;B,g(B^{\sim})&#x3D;A^{\sim},A \bigcap A^{\sim}&#x3D;\oslash,B \bigcap B^{\sim}&#x3D;\oslash$</p><p>这个的证明附在下面</p><p><img src="/img/pic/image-20230427162307217.png" alt="image-20230427162307217"></p><p>这个证明有处疑点，是子集E的存在性存疑。我自己用分类讨论的情形试图证明了一下，待完善。整体思路是寻找A与B之间支持双射的集合。</p><p>如果在这个引理成立的基础上，Cantor-Bernstein定理就不言而喻了</p><p><strong>Cantor-Bernstein定理</strong> 若集合$X$与$Y$的某个真子集对等，$Y$与$X$的某个真子集对等，则$X\sim Y$</p><p><strong>Proof</strong> 对等即存在两个集合之间双射(不用说肯定满足上面引理的存在映射的条件)，即根据引理，存在分解<br>$$<br>X&#x3D;A\bigcup A^{\sim},Y&#x3D;B\bigcup B^{\sim}, f(A)&#x3D;B, g(B^{\sim})&#x3D;A^{\sim}<br>$$<br>根据上面提到的对等的关系，$f,g$均为双射。即存在$g^{-1}(A^{\sim})&#x3D;B^{\sim}$,其次$A\bigcap A^{~}&#x3D;\oslash$,那么存在一个映射<br>$$<br>F(X)&#x3D;\left\lbrace<br>    \begin{array}{lc}<br>        f(x) &amp; x \in A \\<br>        g^{-1}(x)&amp;x\in A^{\sim}<br>    \end{array}<br>\right.<br>$$<br>使两个集合对等，即$X\sim Y$</p><h3 id="实际问题"><a href="#实际问题" class="headerlink" title="实际问题"></a>实际问题</h3><p>从这里解决问题*”一条线段和一条射线之间点集大小的比较？比如集合$[0,1]$与$(0,+\infty )$*” 已经是明显了，因为集合$(0,1)$和$(0,+\infty)$存在映射函数$\frac{1}{x}-1$的缘故是对等。现在如果能证明$(0,1)$和$[0,1]$是对等的，问题就得证。而这两个集合的对等性简单的引用一下Cantor定理即可.</p><h3 id="0-1-和-0-1-之间的一一对应的映射函数"><a href="#0-1-和-0-1-之间的一一对应的映射函数" class="headerlink" title="$(0,1)$和$[0,1]$ 之间的一一对应的映射函数"></a>$(0,1)$和$[0,1]$ 之间的一一对应的映射函数</h3><p>我查阅了资料发现给出这两个集合之间的映射函数的方式有很多，这里给出一种</p><p>$$<br>F(x)&#x3D; \left\lbrace  \begin{array}{lc}<br>        0  ,  x&#x3D;\frac{1}{2} \\<br>        \frac{1}{n} , x &#x3D;\frac{1}{n+2}，n \in N^+ \\<br>        x  ,  besides<br>    \end{array}<br>      \right.<br>$$</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>对等关系和集合包含关系的不同？</p><blockquote><p>可以既包含又对等</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Number theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Point set</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Koopman theory in Parameterization Method</title>
    <link href="/2023/04/23/Koopman%20theory%20in%20Parameterization/"/>
    <url>/2023/04/23/Koopman%20theory%20in%20Parameterization/</url>
    
    <content type="html"><![CDATA[<h1 id="Koopman-theory-in-Parameterization-Method"><a href="#Koopman-theory-in-Parameterization-Method" class="headerlink" title="Koopman theory in Parameterization Method"></a>Koopman theory in Parameterization Method</h1><blockquote><p>引用于知乎<a href="https://zhuanlan.zhihu.com/p/416280988">Modern Koopman Theory For Dynamical Systems 笔记一 - 知乎 (zhihu.com)</a></p></blockquote><blockquote><p>Modern Koopman Theory For Dynamical Systems</p></blockquote><p>最近一直在研究一个问题，参数化降阶方法中，对于一个给定的系统什么样的style得到的降阶模型更加准确，更加global？</p><p>这个问题准确说来自于文章<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Failing parametrizations: what can go wrong when approximating spectral submanifolds https://doi.org/10.1007/s11071-022-08154-3">[1]</span></a></sup>提出的对于一些特殊系统的采用不同的style，而产生不同的结果的问题。本质上，不同的非线性系统适用于不同的style，而怎么去找到那个系统适合那个style？这是一个很大的困惑。其次，对于文章中提到的那几个非线性系统，他的特殊性，我没有一些很准确的认识。所以我希望能找一些别的理论来解释这个问题，从而找到这个问题的解。</p><p>为什么要学习koopman theory？对于上面提到的问题，一个很重要的点在于，对于一个系统，真正决定它的style选择的是线性部分还是非线性部分？实际上，在包括Haller等在内一系列人在处理近内共振时，采用的NFP-NR style的原因仅仅是因为线性部分的特征值的近内共振属性。有一个反例，在文章<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="Failing parametrizations: what can go wrong when approximating spectral submanifolds https://doi.org/10.1007/s11071-022-08154-3">[1]</span></a></sup>中被提到，对于一个线性部分存在近内共振的系统（i.e. 特征值的实部相当小）,研究发现NFP-NR并不是最优的方法，而是NFP-L，这和普遍的认识是相悖的。</p><p>那么我事实上推测，参数化的选择并不能仅仅由线性部分的特征值简单决定。似乎有一些概念类似于”非线性共振”是我需要找到的答案，即非线性项如何影响参数化。这类似于，对于强非线性系统和弱非线性系统的识别。对于问题再聚焦一点（如果我不能找到一个大而全的理论去解决参数化的选择），我们是否先简单的解决对于近内共振问题，多小的特征值实部算小？（这决定了参数化系数的分母的大小）</p><p>这些问题看是很让人浮想联翩，但又是无迹可寻的。好在有Koopman theory，这一研究如果将非线性系统线性化的理论，看能否找到一些能依靠的理论去解决这个问题。</p><h2 id="The-basic-of-koopman-theory"><a href="#The-basic-of-koopman-theory" class="headerlink" title="The basic of koopman theory"></a>The basic of koopman theory</h2><p>Pro. Brunton 这篇review很经典，对于了解基本koopman theory的理论还是最前沿一些研究还是各个领域的应用都是很好的资料。这个章节以文中第二章为基础，简单介绍Koopman theory.</p><h3 id="1-The-definition-of-Koopman-operator"><a href="#1-The-definition-of-Koopman-operator" class="headerlink" title="1.The definition of Koopman operator"></a>1.The definition of Koopman operator</h3><p>考虑一个动力系统<br>$$<br>\frac{d}{dt}x(t)&#x3D;f(x(t))<br>$$<br>这里$x\in\mathbb{R}^n$ 是状态空间中的变量，当然也有可能是在某些n维的流形上面，例如$x\in\mathcal{X}$.同时对于时间映射有$F^t:\mathcal{X}\rightarrow\mathcal{X}$,所以轨迹可以写成<br>$$<br>x(t)&#x3D;F^t(x(0))<br>$$<br>这里定义观察函数(也别称为测量函数measurement function) $g:\mathcal{X}\rightarrow\mathbb{C}$, 表示从相空间到观测空间的映射，$\mathcal{G}(\mathcal{X})$表示观测函数的集合。在此基础上上面，我们可以定义Koopman算子$\mathcal{K}^t:\mathcal{G}(\mathcal{X})\rightarrow\mathcal{G}(\mathcal{X})$,满足以下等式的成立<br>$$<br>\mathcal{K}^tg(x)&#x3D;g(F^t(x))<br>$$<br>这也可以被看作观测空间的时间映射<br>$$<br>g_t:&#x3D;\mathcal{K}^tg,~g_0:&#x3D;g<br>$$</p><h3 id="2-Some-properties-in-koopman-theory"><a href="#2-Some-properties-in-koopman-theory" class="headerlink" title="2. Some properties in koopman theory"></a>2. Some properties in koopman theory</h3><p>Koopman理论的最大特征就是可以把一个非线性的问题转换为一个无限维的线性问题，对于此$\mathcal{G}(\mathcal{X})$是一个线性的函数空间<br>$$<br>\mathcal{K}^t(\alpha_1g_1(x)+\alpha_2g_2(x))&#x3D;\alpha_1g_1(F^t(x))+\alpha_2g_2(F^t(x))&#x3D;\alpha_1\mathcal{K}^tg_1(x)+\alpha_2\mathcal{K}^tg_2(x)<br>$$<br>这允许了在函数空间$\mathcal{G}(\mathcal{X})$的线性化。</p><p>这里定义一个连续系统的无限小算子$\mathcal{L}$<br>$$<br>\mathcal{L}g:&#x3D;\lim_{t\rightarrow0}\frac{\mathcal{K}^tg-g}{t}&#x3D;\lim_{t\rightarrow0}\frac{g(F^t)-g}{t}<br>$$<br>这里的算子$\mathcal{L}$也被称作Lie 算子，他是关于g在向量场f(x)的Lie导数，那么对于$g(x)$的导数可以写作<br>$$<br>\frac{d}{dt}g(x(t))&#x3D;\nabla g \cdot\dot{x}(t)&#x3D;\nabla g\cdot f(x(t))<br>$$<br>同时其也等于Lie导数<br>$$<br>\frac{d}{dt}g(x(t))&#x3D;\lim_{\tau\rightarrow0}\frac{g(x(t+\tau))-g(x(t))}{\tau}&#x3D;\mathcal{L}g(x)<br>$$<br>等价于<br>$$<br>\mathcal{L}g&#x3D;\nabla g\cdot f<br>$$<br>Lie算子满足一个连续时间的线性方程<br>$$<br>\frac{d}{dt}g&#x3D;\mathcal{L}g<br>$$<br>对于一个很特殊的案例来说，将观测函数设为Identity function,$g(x)&#x3D;x$.这对于上式的左边来说通常是$\dot{x}$，这和原来的状态方程一致。而对于等式的右端来说$\mathcal{L}x$，变成了函数空间$\mathcal{G}(\mathcal{X})$中大量(无限)的基的线性组合。这一个性质在后面一篇推导Koopman框架下的NNM和原本的理论之间关系的文章中有用到。</p><h3 id="3-Eigenfunctions-of-Koopman-operator"><a href="#3-Eigenfunctions-of-Koopman-operator" class="headerlink" title="3. Eigenfunctions of Koopman operator"></a>3. Eigenfunctions of Koopman operator</h3><p>对于Koopman 算子的特征值和特征函数$\varphi(x)$，其满足以下等式<br>$$<br>\frac{d}{dt}\varphi(x)&#x3D;\mathcal{L}\varphi(x)&#x3D;\mu\varphi(x)<br>$$<br>这也代表Koopman 算子有<br>$$<br>\mathcal{K}^t\varphi&#x3D;\lambda^t\varphi<br>$$<br>这其中隐含了Lie算子的特征值和Koopman算子的特征值之间的关系$\lambda^t&#x3D;exp(\mu t)$,这也代表了这两个特征值之间的等价性</p><p>对于一个线性系统$\dot{x}&#x3D;Ax$,对于其左特征向量$\xi^TA&#x3D;\lambda\xi^T$,可以直接利用这个关系建造对应的Koopman特征函数<br>$$<br>\varphi(x):&#x3D;\xi^Tx<br>$$</p><p>$$<br>\mathcal{K}\varphi(x)&#x3D;\varphi(Ax)&#x3D;\xi^TAx&#x3D;\lambda\xi^Tx&#x3D;\lambda\varphi(x)<br>$$</p><p>也就是说左特征向量给出了观测函数空间的时间不变的方向。</p><p>对于Koopman算子的特征函数，其具有两个任意的特征函数的乘积仍然是特征函数，例如<br>$$<br>\mathcal{K}(\varphi_1(x)\varphi_2(x))&#x3D;\varphi_1(F(x))\varphi_2(F(x))&#x3D;\lambda_1\lambda_2\varphi_1(x)\varphi_2(x)<br>$$<br>这条性质也可以用来建造无限特征函数空间。此外，类似于线性代数，观测函数空间的观测函数可以用特征函数的线性组合来表示，即$g\in span{\varphi_k}$<br>$$<br>g(x)&#x3D;\sum_kv_k\varphi_k<br>$$</p><h4 id="level-set-of-eigenfunction"><a href="#level-set-of-eigenfunction" class="headerlink" title="level-set of eigenfunction"></a>level-set of eigenfunction</h4><p>对于特征函数的Level-set来说，代表了相空间中点集之间的关系。比如我们将特征函数写成极坐标的形式<br>$$<br>\varphi(x)&#x3D;R(x)e^{i\Theta(x)},\lambda&#x3D;re^{i\theta}<br>$$<br>定义子level-set为<br>$$<br>M_\varphi(C):&#x3D;{x\in\mathcal{X}:R(x)\leq C},A_\varphi:&#x3D;{x\in\mathcal{X}:\Theta(x)\leq \alpha}<br>$$<br>对于时间映射F有<br>$$<br>F(M_\phi(C))&#x3D;M_\phi(rC),~F(A_\phi(\alpha))&#x3D;A_\phi(\alpha+\theta)<br>$$<br>对于一个将左特征向量作为特征函数$\xi^Tx$的线性系统$\dot{x}&#x3D;Ax$。我们可以看到特征函数将相空间分割为一个个level-set，代表着相空间中点的一个时间上的顺序</p><p><img src="/img/pic/image-koopman-1.png" alt="image-koopman-1"></p><p>上图是针对一个特征值是实数的情况，如果特征值是复数，那么我们可以看到相空间中的levelset和lypunov函数一样，一圈一圈的围住不动点</p><p><img src="/img/pic/image-koopman-2.png" alt="image-koopman-2"></p><p> 这类levelset也被称作<em>isostables</em>,这在后面的文献也会解释。</p><h3 id="4-Koopman-mode-decomposition"><a href="#4-Koopman-mode-decomposition" class="headerlink" title="4. Koopman mode decomposition"></a>4. Koopman mode decomposition</h3><p>对于一个向量的观测函数<br>$$<br>\begin{aligned}<br>g(x)&#x3D;\left[<br>    \begin{array}<br>    {[c]}<br>    g_{1} \<br>    g_{2} \<br>    \vdots&amp;\<br>    g_{p}<br>    \end{array}\right]<br>\end{aligned}<br>$$<br>对于每一个独立的观测函数，都可以用特征函数来线性表示<br>$$<br>g_{i}(x)&#x3D;\sum^{\infty}<em>{j&#x3D;1}v</em>{ij}\varphi_{j}(x)<br>$$<br>也可以写成<br>$$<br>\begin{aligned}<br>g(x)&#x3D;\left[<br>    \begin{array}<br>    {[c]}<br>    g_{1} \<br>    g_{2}\<br>    \vdots\<br>    g_{p}<br>    \end{array}\right]<br>    &#x3D;\sum^{\infty}_{j&#x3D;1}\varphi_j(x)v_j<br>\end{aligned}<br>$$<br>这里的$v_j$就代表了j-th 的Koopman mode,其对应着特征函数$\varphi_j$.同时由于特征函数构建了连续系统的正交基，我可以通过正交来计算相应的mode<br>$$<br>v_j&#x3D;\left[<br>    \begin{array}<br>    {[c]}<br>    &lt;\varphi_j,g_{1}&gt; \<br>    &lt;\varphi_j,g_{2}&gt;\<br>    \vdots\<br>    &lt;\varphi_j,g_{p}&gt;<br>    \end{array}\right]<br>$$</p><h3 id="5-A-example-of-Koopman-embedding"><a href="#5-A-example-of-Koopman-embedding" class="headerlink" title="5. A example of Koopman embedding"></a>5. A example of Koopman embedding</h3><p>我们考虑一个动力系统<br>$$<br>\begin{align}<br>\dot{x}_1 &amp;&#x3D; \mu x_1 \<br>\dot{x}_2 &amp;&#x3D; \lambda(x_2-x^{2}_1)<br>\end{align}<br>$$<br>这里只需要将$x^2_1$设成一个观测函数，就可以很好的构成一个线性的三维Koopman空间<br>$$<br>\frac{d}{dt}\left[\begin{array}<br>{[c]}<br>y_1 \<br>y_2 \<br>y_3<br>\end{array}\right]&#x3D;\begin{bmatrix}<br>\mu &amp;0 &amp;0\<br>0   &amp;\lambda &amp;-\lambda \<br>0   &amp;0  &amp;2\mu<br>\end{bmatrix}\left[\begin{array}<br>{[c]}<br>y_1 \<br>y_2 \<br>y_3<br>\end{array}\right]<br>$$<br>据此，我们可以求得这个线性算子的特征向量和特征值。根据理论求得线性系统的系数矩阵的左特征向量,再与变换后的坐标内积，即为Koopman算子的特征函数。观察矩阵，我们可以看出是一个分块对角矩阵，明显的得出一个特征值为$\mu$,另外一个特征值$\lambda$可以通过解另外一个对角块<br>$$<br>\left|\begin{bmatrix}<br>\lambda &amp;-\lambda\<br>0       &amp;2\mu<br>\end{bmatrix}-kI\right|&#x3D;0<br>$$<br>对于特征函数，将特征值代入等式，再求解线性方程，得到左特征向量(这和右特征值不一样)。再将其和$[y_1<del>y_2</del>y_3]^T$内积，可以得到特征函数<br>$$<br>\varphi_\mu&#x3D;x_1,<del>\varphi_\lambda&#x3D;x_2-bx^2_1,</del>b&#x3D;\frac{\lambda}{\lambda-2\mu}<br>$$<br>可以通过这个例子验证前面的性质<br>$$<br>\frac{d}{dt}\varphi_\mu&#x3D;\mu\varphi_\mu,~\frac{d}{dt}\varphi_\lambda&#x3D;\lambda\varphi_\lambda<br>$$</p><h2 id="Some-thinking-for-references"><a href="#Some-thinking-for-references" class="headerlink" title="Some thinking for references"></a>Some thinking for references</h2><p>针对Koopman在动力系统里面的文献太过于繁杂了，对于其的应用逻辑还不是很了解。比如一些文献分析线性化，那么怎么线性化的最终目的是什么，产生的结果是什么，和NFP(Normal form方法)又有什么区别，这是一个很奇怪的东西。</p><h3 id="1-A-spectral-characterization-of-nonlinear-normal-modes"><a href="#1-A-spectral-characterization-of-nonlinear-normal-modes" class="headerlink" title="1. A spectral characterization of nonlinear normal modes"></a>1. A spectral characterization of nonlinear normal modes</h3><p> 这篇文献的主要目的是为了介绍从Koopman的框架怎么到非线性模态的内容。从这个角度来看，确实存在一些很隐晦的联系在现在的降阶方法和Koopman理论之间。在文章中，作者将非线性模态和Koopman算子的特征函数的零level-set联系到一起。说明实际上是可以从Koopman理论的框架转移到不变流形的求解上。</p><p>具体内容不赘述，但是值得一提的这里将Identity function的特征展开表达为<br>$$<br>id(x)&#x3D;x&#x3D;\sum_{(k_1,\dots,k_n)\in N^n}v_{k_1,\dots,k_n}\xi^{k_1}_1\dots\xi^{k_n}_n<br>$$<br>这里让$\xi_k&#x3D;s_k(x)$,代表让特征函数代表一个新的坐标，表示最初的坐标和被特征函数定义的新的坐标系统之间的转换（这个意义和参数化中降阶的对应的概念还没有想好）。但是特征函数满足<br>$$<br>\dot{s_k}(x)&#x3D;\lambda_k s_k(x),~\dot{\xi_k}&#x3D;\lambda_k \xi_k<br>$$<br>这不就是和采用normal form style的方法不谋而合了吗？然而和文章中强调的可以跨越fold，这也印证了这个想法。如果是这样的，那么很失望，因为对我们最初的问题可能没有什么帮助。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>Failing parametrizations: what can go wrong when approximating spectral submanifolds <a href="https://doi.org/10.1007/s11071-022-08154-3">https://doi.org/10.1007/s11071-022-08154-3</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>Modern theory</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Koopman theory</tag>
      
      <tag>Parameterization method</tag>
      
      <tag>Nonlinear model mode(NNM)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Harmonic balancing method in NLvib</title>
    <link href="/2023/04/23/Harmonic%20Balance%20method_NLvib/"/>
    <url>/2023/04/23/Harmonic%20Balance%20method_NLvib/</url>
    
    <content type="html"><![CDATA[<h1 id="Harmonic-balancing-method-in-NLvib"><a href="#Harmonic-balancing-method-in-NLvib" class="headerlink" title="Harmonic balancing method in NLvib"></a>Harmonic balancing method in NLvib</h1><blockquote><p>考虑到解决自激系统参数化的前置条件——获得系统周期解的谐波形式。遂学习谐波平衡法现在做的做的最成熟的NLvib, 这是来自德国斯图加特大学的一个课题组的成果。</p></blockquote><h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p><u>谐波平衡法是一种寻求常微分方程系统的周期解的近似方法</u></p><h2 id="谐波平衡法的优势"><a href="#谐波平衡法的优势" class="headerlink" title="谐波平衡法的优势"></a>谐波平衡法的优势</h2><ul><li><u>高效的计算效率</u>(比起其他的积分方法，此类方法确实在计算效率是一个很大，有可能是最大的优势)</li><li>数值稳定</li><li>相位滞后边界条件</li><li><u>计算不稳定解</u>(这对于一些方法，特别是积分方法，是一件很难的事情)</li></ul><h2 id="Simple-example"><a href="#Simple-example" class="headerlink" title="Simple example"></a>Simple example</h2><p>现在不太想打公式，请等等</p><p>从例子可以看出，谐波平衡法可以很简单的改变参数，获得延拓解。同时可以得到一个系统的多稳态解</p><p><img src="/img/pic/image-HBM-1.png" alt="image-HBM-1"></p><h2 id="Harmonic-Balance-as-a-Galerkin-method"><a href="#Harmonic-Balance-as-a-Galerkin-method" class="headerlink" title="Harmonic Balance as a Galerkin method"></a>Harmonic Balance as a Galerkin method</h2><p>这里面Galerkin method扮演了什么角色？再想想。</p><h2 id="Treatment-of-nonlinear-forces"><a href="#Treatment-of-nonlinear-forces" class="headerlink" title="Treatment of nonlinear forces"></a>Treatment of nonlinear forces</h2><ul><li>多项式：卷积方法</li><li>分段多项式(分段线性):确定转换时间，正如上面</li><li>广义的非线性力:Alternating-Frequency-Time Scheme（AFT）</li></ul>]]></content>
    
    
    <categories>
      
      <category>Numerical method</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Periodic solution</tag>
      
      <tag>semi-analysis method</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/04/17/hello-world/"/>
    <url>/2023/04/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
